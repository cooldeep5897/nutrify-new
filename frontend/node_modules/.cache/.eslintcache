[{"D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\index.js":"1","D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\App.js":"2","D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\reportWebVitals.js":"3","D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\components\\AppRouter.js":"4","D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\components\\HomePage.js":"5","D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\components\\forms\\multipleInputs.js":"6","D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\components\\forms\\home.js":"7","D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\components\\forms\\login.js":"8","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\index.js":"9","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\App.js":"10","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\reportWebVitals.js":"11","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\AppRouter.js":"12","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\HomePage.js":"13","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\forms\\multipleInputs.js":"14","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\forms\\login.js":"15","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\forms\\home.js":"16","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\forms\\createMeal.js":"17","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\forms\\showMeals.js":"18"},{"size":500,"mtime":499162500000,"results":"19","hashOfConfig":"20"},{"size":199,"mtime":1624696112138,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":697,"mtime":1625666687427,"results":"23","hashOfConfig":"20"},{"size":874,"mtime":1624989501339,"results":"24","hashOfConfig":"20"},{"size":2527,"mtime":1625674809122,"results":"25","hashOfConfig":"20"},{"size":2094,"mtime":1625769216935,"results":"26","hashOfConfig":"20"},{"size":2003,"mtime":1625666510254,"results":"27","hashOfConfig":"20"},{"size":500,"mtime":499162500000,"results":"28","hashOfConfig":"29"},{"size":199,"mtime":1624696112138,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":923,"mtime":1627366759270,"results":"32","hashOfConfig":"29"},{"size":874,"mtime":1624989501339,"results":"33","hashOfConfig":"29"},{"size":2527,"mtime":1625674809122,"results":"34","hashOfConfig":"29"},{"size":1753,"mtime":1626203032514,"results":"35","hashOfConfig":"29"},{"size":3477,"mtime":1627366933691,"results":"36","hashOfConfig":"29"},{"size":3266,"mtime":1626720413997,"results":"37","hashOfConfig":"29"},{"size":3825,"mtime":1627367426037,"results":"38","hashOfConfig":"29"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"w6wsp0",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wz38qc",{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},"D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\index.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\App.js",["79"],"D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\reportWebVitals.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\components\\AppRouter.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\components\\HomePage.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\components\\forms\\multipleInputs.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\components\\forms\\home.js",["80"],"D:\\AddSkill\\react-and-node-apps\\Nutrify1\\frontend-loginSignup-app\\src\\components\\forms\\login.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\index.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\App.js",["81"],"import logo from './logo.svg';\nimport './App.css';\nimport AppRouter from './components/AppRouter';\n\n\nconst App = () => {\n  return(\n    <div>\n      <AppRouter/> \n    </div>\n  )\n}\n\nexport default App;\n","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\reportWebVitals.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\AppRouter.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\HomePage.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\forms\\multipleInputs.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\forms\\login.js",[],"D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\forms\\home.js",["82","83","84"],"import React,{ useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Home=()=>{\r\n     console.log('in home');\r\n    const history=useHistory();\r\n    const [userData,setUserData]=useState({});\r\n    const [calData,setCalData]=useState(\"\");\r\n    console.log(\"after useState\");\r\n    useEffect(()=>{\r\n        callHome();\r\n        PostData();\r\n    },[]);\r\n  \r\n    \r\n    const callHome= async ()=>{\r\n        try {\r\n            const res=await fetch('/todos/home',{\r\n                method:'GET',\r\n                headers:{\r\n                    \r\n                    Accept:\"application/json\",\r\n                    \"Content-Type\":\"application/json\"\r\n\r\n                },\r\n                credentials:\"include\"\r\n            });\r\n            const data= await res.json();\r\n            console.log('user details ',data);\r\n            \r\n            setUserData(data);\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const PostData= async (e)=>{\r\n        \r\n        var today = new Date();\r\n            var dd = String(today.getDate()).padStart(2, '0');\r\n            var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n            var yyyy = today.getFullYear();\r\n\r\n            today =  yyyy+ '-' + mm + '-' + dd ;\r\n        \r\n    const res=await fetch('/todos/fetchmeal',{\r\n        method:\"POST\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n            date:today\r\n        })\r\n    });\r\n    \r\n    const data=await res.json();\r\n    if (data.error) {\r\n        alert(data.success);\r\n    } else {\r\n        console.log(\"in home mealsfetched\");\r\n        console.log(data.meals);\r\n        // history.push('/home');\r\n        let totcal=0\r\n        {data.meals.map((cal,index)=>{\r\n             totcal+=parseInt(cal.calories);\r\n                console.log(cal.calories) ;\r\n            \r\n        })}\r\n        setCalData(totcal);\r\n        // console.log(calData);\r\n        // console.log(userData);\r\n        console.log('calorie',totcal);\r\n    }\r\n}\r\n\r\n    return(\r\n        <div className=\"user\" >\r\n            <h1 class=\"user__title\">Hello { userData.email}</h1>\r\n            <p>Max calories allowed: {userData.maxcal}</p>\r\n            <p>Calories Consumed: {calData}</p>\r\n        { parseInt(calData)>userData.maxcal?(<div className=\"background-red \">U are abouve ur limit</div>):(<div>u have {userData.maxcal-parseInt(calData)}  calories to go</div>)}\r\n        <form className=\"form\">\r\n            <div className=\"form__group\">\r\n            <NavLink to=\"/createmeal\" activeClassName=\"active\">\r\n                <button className=\"btn\" type=\"button\" >Create Meal</button>\r\n            </NavLink></div>\r\n        </form>\r\n        <form className=\"form\">\r\n            <div className=\"form__group\">\r\n            <NavLink to=\"/createmeal\" activeClassName=\"active\">\r\n                <button className=\"btn\" type=\"button\" >Create Meal</button>\r\n            </NavLink></div>\r\n        </form>\r\n        <form className=\"form\">\r\n            <div className=\"form__group\">\r\n            <NavLink to=\"/createmeal\" activeClassName=\"active\">\r\n                <button className=\"btn\" type=\"button\" >Create Meal</button>\r\n            </NavLink></div>\r\n        </form>\r\n\r\n        <a href=\"/showmeals\">show Meal</a><br></br>\r\n        <a href=\"/todos/deletemeal\">Delete Meal</a><br></br>\r\n        </div>\r\n        )\r\n\r\n}\r\nexport default Home;","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\forms\\createMeal.js",["85"],"    import React,{ useState } from \"react\";\r\n    import { useHistory } from 'react-router';\r\n\r\nconst CreateMeals=()=>{\r\n    \r\n        const history=useHistory();\r\n        const [user,setUser]= useState({\r\n            mealname:\"\",\r\n            calories:\"\",\r\n            mealid:\"\"\r\n        });\r\n    \r\n    \r\n    const handelInput =(e)=>{\r\n        const name=e.target.name;\r\n        const value=e.target.value;\r\n        console.log(name,value);\r\n    \r\n        setUser({...user,[name]:value});\r\n    \r\n    }\r\n    \r\n        const PostData= async (e)=>{\r\n            e.preventDefault();\r\n            var today = new Date();\r\n            var dd = String(today.getDate()).padStart(2, '0');\r\n            var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n            var yyyy = today.getFullYear();\r\n\r\n            today =  yyyy+ '-' + mm + '-' + dd ;\r\n        const {mealname, calories ,mealid }=user;\r\n    \r\n        const res=await fetch('/todos/createMeal',{\r\n            method:\"POST\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\"\r\n            },\r\n            body:JSON.stringify({\r\n                mealname, calories, date:today\r\n            })\r\n        });\r\n\r\n        const data=await res.json();\r\n        if (data.error) {\r\n            alert(data.message);\r\n        } else {\r\n            console.log(\"meal added\");\r\n            history.push('/home');\r\n        }\r\n        \r\n    }  \r\n\r\n    // const PostData= async (e)=>{\r\n        \r\n    //     var today = new Date();\r\n    //         var dd = String(today.getDate()).padStart(2, '0');\r\n    //         var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n    //         var yyyy = today.getFullYear();\r\n\r\n    //         today =  yyyy+ '-' + mm + '-' + dd ;\r\n        \r\n    // const res=await fetch('/todos/fetchmeal',{\r\n    //     method:\"POST\",\r\n    //     headers:{\r\n    //         \"Content-Type\":\"application/json\"\r\n    //     },\r\n    //     body:JSON.stringify({\r\n    //         date:today\r\n    //     })\r\n    // });\r\n\r\n    // const data=await res.json();\r\n    // if (data.error) {\r\n    //     alert(data.success);\r\n    // } else {\r\n    //     console.log(\"in home mealsfetched\");\r\n    //     console.log(data.meals);\r\n    //     // history.push('/home');\r\n    // }\r\n\r\n\r\nreturn(\r\n    <div  className=\"user\">\r\n         <header className=\"user__header\"> <h1 class=\"user__title\">***** Add meal *****</h1></header>\r\n        <form className=\"form\" action=\"\" onSubmit={PostData}>\r\n        <div class=\"form__group\">\r\n        <input className='form__input' placeholder=\"mealname\" type=\"text\" autoComplete=\"off\" name=\"mealname\"\r\n        value={user.mealname}\r\n        onChange={handelInput}\r\n        /></div>\r\n        {/* <div class=\"form__group\">\r\n        <input className='form__input' placeholder=\"Meal ID\" type=\"number\" autoComplete=\"off\"  name=\"mealid\"\r\n        value={user.mealid}\r\n        onChange={handelInput}\r\n        /></div> */}\r\n       <div class=\"form__group\">\r\n        <input className='form__input' placeholder=\"calories\" type=\"number\" autoComplete=\"off\"  name=\"calories\"\r\n        value={user.calories}\r\n        onChange={handelInput}\r\n        /></div>\r\n        <button class=\"btn\" type=\"submit\">ADD MEAL</button>\r\n    </form>\r\n    </div>\r\n)\r\n\r\n}\r\nexport default CreateMeals;","D:\\AddSkill\\react-and-node-apps\\Nutrify\\nutrify-new\\frontend\\src\\components\\forms\\showMeals.js",["86"],"import React,{ useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Showmeals=()=>{\r\n     console.log('in home');\r\n    const history=useHistory();\r\n    // const [userData,setUserData]=useState({});\r\n    // const [calData,setCalData]=useState(\"\");\r\n    const [meals,setMeals]=useState([{}]);\r\n    console.log(\"after useState\");\r\n    useEffect(()=>{\r\n        // callHome();\r\n        PostData();\r\n    },[]);\r\n  \r\n    \r\n    // const callHome= async ()=>{\r\n    //     try {\r\n    //         const res=await fetch('/todos/home',{\r\n    //             method:'GET',\r\n    //             headers:{\r\n                    \r\n    //                 Accept:\"application/json\",\r\n    //                 \"Content-Type\":\"application/json\"\r\n\r\n    //             },\r\n    //             credentials:\"include\"\r\n    //         });\r\n    //         const data= await res.json();\r\n    //         console.log('user details ',data);\r\n            \r\n    //         setUserData(data);\r\n    //     } catch (error) {\r\n    //         console.log(error);\r\n    //     }\r\n    // }\r\n\r\n    const PostData= async (e)=>{\r\n        \r\n        var today = new Date();\r\n            var dd = String(today.getDate()).padStart(2, '0');\r\n            var mm = String(today.getMonth() + 1).padStart(2, '0');\r\n            var yyyy = today.getFullYear();\r\n\r\n            today =  yyyy+ '-' + mm + '-' + dd ;\r\n        \r\n    const res=await fetch('/todos/fetchmeal',{\r\n        method:\"POST\",\r\n        headers:{\r\n            \"Content-Type\":\"application/json\"\r\n        },\r\n        body:JSON.stringify({\r\n            date:today\r\n        })\r\n    });\r\n    \r\n    const data=await res.json();\r\n    if (data.error) {\r\n        alert(data.success);\r\n    } else {\r\n        console.log(\"in home mealsfetched\");\r\n        setMeals(data.meals);\r\n        console.log(data.meals);\r\n        // history.push('/home');\r\n        // let totcal=0\r\n        // {data.meals.map((cal,index)=>{\r\n        //      totcal+=parseInt(cal.calories);\r\n        //         console.log(cal.calories) ;\r\n            \r\n        // })}\r\n        // setCalData(totcal);\r\n        // // console.log(calData);\r\n        // // console.log(userData);\r\n        // console.log('calorie',totcal);\r\n    }\r\n}\r\n\r\n    return(\r\n        <div className=\"user\" >\r\n            {/* <h1 class=\"user__title\">Hello { userData.email}</h1>\r\n            <p>Max calories allowed: {userData.maxcal}</p>\r\n            <p>Calories Consumed: {calData}</p>\r\n        { parseInt(calData)>userData.maxcal?(<div className=\"background-red \">U are abouve ur limit</div>):(<div>u have {userData.maxcal-parseInt(calData)}  calories to go</div>)} */}\r\n        <ul>{\r\n            meals.map((meal,index)=>{\r\n                return(<li>{meal.mealname}</li>)\r\n            } )\r\n        }</ul>\r\n        \r\n        \r\n        <form className=\"form\">\r\n            <div className=\"form__group\">\r\n            <NavLink to=\"/createmeal\" activeClassName=\"active\">\r\n                <button className=\"btn\" type=\"button\" >Create Meal</button>\r\n            </NavLink></div>\r\n        </form>\r\n        <form className=\"form\">\r\n            <div className=\"form__group\">\r\n            <NavLink to=\"/createmeal\" activeClassName=\"active\">\r\n                <button className=\"btn\" type=\"button\" >Create Meal</button>\r\n            </NavLink></div>\r\n        </form>\r\n        <form className=\"form\">\r\n            <div className=\"form__group\">\r\n            <NavLink to=\"/createmeal\" activeClassName=\"active\">\r\n                <button className=\"btn\" type=\"button\" >Create Meal</button>\r\n            </NavLink></div>\r\n        </form>\r\n\r\n\r\n        <a href=\"/todos/updatemeal\">Update Meal</a><br></br>\r\n        <a href=\"/todos/deletemeal\">Delete Meal</a><br></br>\r\n        </div>\r\n        )\r\n\r\n}\r\nexport default Showmeals;",{"ruleId":"87","severity":1,"message":"88","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"91","line":6,"column":11,"nodeType":"89","messageId":"90","endLine":6,"endColumn":18},{"ruleId":"87","severity":1,"message":"88","line":1,"column":8,"nodeType":"89","messageId":"90","endLine":1,"endColumn":12},{"ruleId":"87","severity":1,"message":"91","line":7,"column":11,"nodeType":"89","messageId":"90","endLine":7,"endColumn":18},{"ruleId":"92","severity":1,"message":"93","line":65,"column":9,"nodeType":"94","messageId":"95","endLine":69,"endColumn":12},{"ruleId":"96","severity":1,"message":"97","line":65,"column":36,"nodeType":"98","messageId":"99","endLine":65,"endColumn":38},{"ruleId":"87","severity":1,"message":"100","line":31,"column":36,"nodeType":"89","messageId":"90","endLine":31,"endColumn":42},{"ruleId":"87","severity":1,"message":"91","line":7,"column":11,"nodeType":"89","messageId":"90","endLine":7,"endColumn":18},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'mealid' is assigned a value but never used."]